<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--整合springdataredis 核心API :redisTemplate，用来操作redis服务器-->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <!--设置key的序列化方式-->
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>
        </property>
        <!--设置value的序列化方式-->
        <property name="valueSerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>
        </property>
        <!--注入连接工厂-->
        <property name="connectionFactory" ref="connectionFactory"></property>
    </bean>
    <!--创建connectionFactory交给spring-->
    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="127.0.0.1"/>
        <property name="port" value="6379"/>
        <property name="clientName" value="requirepass"/>
        <property name="password" value="qaz.456"/>
        <property name="database" value="0"/>
        <property name="poolConfig" ref="poolConfig"/>
    </bean>
    <!--配置redis的连接池的基本配置-->
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="1000"/>
    </bean>

    <!-- 监听器适配器 -->
    <bean id="messageListenerTopicAll"
          class="org.springframework.data.redis.listener.adapter.MessageListenerAdapter">
        <!--注入监听器-->
        <constructor-arg><bean class="com.redis.listener.RedisMessageListener"></bean> </constructor-arg>
    </bean>

    <!--配置监听器容器-->
    <bean class="org.springframework.data.redis.listener.RedisMessageListenerContainer" id="messageContainer">
        <!-- *由于和redis进行交互，注入连接工厂
            1.订阅的消息主题
            2.接收到消息之后处理的监听器 -->
        <property name="connectionFactory" ref="connectionFactory"></property>
        <property name="messageListeners">
            <map>
                <entry key-ref="messageListenerTopicAll">
            <!-- topic 的集合：订阅的主题
                 订阅的一个主题消息：主题名称(ITCAST)
                 接收到一条消息之后，交由自定义的消息监听器来进行处理 -->
                <list>
                    <bean class="org.springframework.data.redis.listener.ChannelTopic">
                        <constructor-arg value="ITCAST"></constructor-arg>
                    </bean>
                </list>
                </entry>
            </map>
        </property>
    </bean>
</beans>